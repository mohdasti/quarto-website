---
title: "Surgeon Cognitive Dashboard — Case Study"
subtitle: "Zero-headgear neuro-ergonomics for robotic surgery"
author: "Mohammad Dastgheib"
format:
  html:
    theme: flatly
    toc: true
    toc-depth: 3
    number-sections: false
    smooth-scroll: true
    lightbox: auto
execute:
  echo: false
  message: false
  warning: false
resources:
  - projects/supporting_files/**

---

```{=html}
<style>
/* --- Minimal clinical theme (inline; no external files) --- */
:root {
  --ink:#0b1526; --muted:#4b5563; --bg:#f7f9fc; --card:#ffffff;
  --accent:#1f9bb6; --ok:#27ae60; --warn:#f39c12; --crit:#e74c3c; --border:#e5e7eb;
}
body { color:var(--ink); background:var(--bg); }
h1,h2,h3 { letter-spacing:.2px; }
a { color:var(--accent); }
.quarto-title-banner { background:var(--card); border-bottom:1px solid var(--border); }
.figure img, video { border:1px solid var(--border); border-radius:12px; }
.gt_table { font-family: Inter, system-ui, -apple-system, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; }
.gt_table .gt_row { font-variant-numeric: tabular-nums; }
.callout { border-left-color: var(--accent) !important; }
</style>
```

```{=html}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">

<style>
.tldr-card{background:#ffffff;border:1px solid #e5e7eb;border-left:4px solid #1f9bb6;border-radius:12px;padding:12px 14px;margin:8px 0 14px;box-shadow:0 1px 1px rgba(16,24,40,.02)}
.tldr-title{font-weight:700;letter-spacing:.2px;margin-bottom:.25rem}
.tldr-text{margin:.15rem 0 .5rem;color:#111827}
.tldr-chips{display:flex;flex-wrap:wrap;gap:6px}
.tldr-chips a{display:inline-flex;align-items:center;gap:.35rem;font-size:.86rem;padding:.18rem .5rem;border-radius:999px;border:1px solid #d7dee6;background:#f8fafc;text-decoration:none;color:#0b1526}
.tldr-chips a:hover{background:#eef6fb;border-color:#b7e1f0}
</style>

<div class="tldr-card" role="note" aria-label="TL;DR">
  <div class="tldr-title">TL;DR</div>
  <div class="tldr-text">
    Reduce <b>high-load min/hr</b>, prevent <b>lapses</b>, and keep trainees in the <b>optimal zone</b> with
    <b>pupil + grip/tremor + HRV</b>—no headgear.
  </div>
  <div class="tldr-chips">
    <a href="#training-lab"><i class="bi bi-sliders"></i> Why thresholds adapt</a>
    <a href="#production-dashboard"><i class="bi bi-activity"></i> Production dashboard</a>
    <a href="#results-that-matter-ops-kpis" title="Methods & Results that matter"><i class="bi bi-graph-up-arrow"></i> Ops metrics</a>
  </div>
</div>
```

## Why I built this

```{=html}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">

<!-- Enable Bootstrap 5 tooltips (hover-activated, with guards) -->
<script>
window.addEventListener('DOMContentLoaded', () => {
  if (!window.bootstrap || !bootstrap.Tooltip) return; // guard
  // Add a custom class to all tooltips by default (wider, readable)
  document.querySelectorAll('[data-bs-toggle="tooltip"]').forEach(el => {
    if (!el.dataset.bsCustomClass) el.dataset.bsCustomClass = 'tt-wide';
    el.setAttribute('tabindex', '0'); // keyboard focus
    new bootstrap.Tooltip(el, {container: 'body', trigger: 'hover focus', html: true});
  });
});
</script>

<style>
/* Wider, cleaner tooltips */
.tt-wide .tooltip-inner{
  max-width: 340px;           /* default ~200px can feel cramped */
  text-align: left;
  line-height: 1.25;
  padding: .45rem .55rem;
}
/* Slightly bigger hit area for the ⓘ pill */
.help-icon{display:inline-flex;align-items:center;justify-content:center;
  width:1.05em;height:1.05em;border-radius:999px;border:1px solid #e5e7eb;
  color:#1f9bb6;font-size:.8em;margin-left:.25rem;cursor:help;vertical-align:baseline}
.help-icon:hover{background:#e6f6fb;border-color:#b7e1f0}
.help-icon i{font-size:1em}
</style>

<!-- ===== Enriched SST + PhD section with hover help ===== -->

<p>
<strong><a href="https://www.surgicalsafety.com/" target="_blank" rel="noopener">Surgical Safety Technologies (SST)</a></strong>
(Research Assistant / AI Annotator).
</p>

<ul>
  <li>
    Assisted on <em>instance segmentation</em>
    <span class="help-icon"
          data-bs-toggle="tooltip"
          title="Pixel-wise masks for each instrument (vs. boxes only), which enables occlusion-aware tracking and per-tool metrics. Useful downstream for contact detection &amp; dwell time.">
      <i class="bi bi-info-circle"></i>
    </span>
    for tool detection/tracking
  </li>

  <li>
    Computed <em>inter-rater reliability</em> (κ/ICC)
    <span class="help-icon"
          data-bs-toggle="tooltip"
          title="<b>κ (kappa):</b> categorical agreement adjusted for chance<br><b>ICC:</b> continuous/interval agreement across raters<br>Heuristics: κ ≥ 0.60 / ICC ≥ 0.75 = acceptable for ops; re-train below">
      <i class="bi bi-info-circle"></i>
    </span>
    for analyst labels
  </li>

  <li>
    Reviewed ML-for-safety literature
    <span class="help-icon"
          data-bs-toggle="tooltip"
          title="Streams: adverse-event detection, tool usage analytics, OR black-box &amp; safety auditing; emphasis on deployability and annotation quality.">
      <i class="bi bi-info-circle"></i>
    </span>
    to support analyst operations
  </li>
</ul>

<p style="margin:.25rem 0 0">
  → <strong>Lesson:</strong> <em>labels drift</em>
  <span class="help-icon" role="button" aria-label="What is label drift?"
        data-bs-toggle="tooltip"
        title="Definitions &amp; mental models shift over time and across raters (ontology changes, UI nudges). Mitigations: κ/ICC gates, versioned rubrics, targeted re-labeling.">
    <i class="bi bi-info-circle" aria-hidden="true"></i>
  </span>,
  <em>interfaces &amp; alarm hygiene decide adoption</em>
  <span class="help-icon" role="button" aria-label="Why does alarm hygiene matter?"
        data-bs-toggle="tooltip"
        title="Target ≤ <b>0.6 alerts/min</b> (median)<br>Context-aware suppression during critical actions<br>Explainable triggers: e.g., <b>HRV↓ + TEPR↑</b><br>Snooze/decay to prevent repeats; short, actionable text">
    <i class="bi bi-info-circle" aria-hidden="true"></i>
  </span>.
</p>

<hr style="border:none;border-top:1px solid #e5e7eb;margin:1rem 0" />

<p>
<strong><a href="https://mdastgheib.com/research/" target="_blank" rel="noopener">UC Riverside</a></strong>
(PhD project and dissertation).
</p>

<ul>
  <li>
    Test concurrent physical (<b>5% vs 40% MVC</b>
    <span class="help-icon"
          data-bs-toggle="tooltip"
          title="MVC = Maximum Voluntary Contraction. 5% ≈ light isometric grip; 40% ≈ high effort.">
      <i class="bi bi-info-circle"></i>
    </span>)
    × cognitive effort with <em>pupillometry</em>
    <span class="help-icon"
          data-bs-toggle="tooltip"
          title="<b>Tonic</b> (baseline diameter) ≈ arousal state<br><b>TEPR</b> (task-evoked) ≈ phasic LC-NE response<br>Used alongside HRV to disambiguate stress vs. lapse">
      <i class="bi bi-info-circle"></i>
    </span>
  </li>

  <li>
    Domains: working/long-term memory + auditory/visual discrimination
    <span class="help-icon"
          data-bs-toggle="tooltip"
          title="Cross-domain design tests generality of arousal effects beyond a single task family.">
      <i class="bi bi-info-circle"></i>
    </span>
  </li>

  <li>
    Theories: <em>Resource Competition</em>
    <span class="help-icon"
          data-bs-toggle="tooltip"
          title="Shared resources → physical effort can tax/exacerbate cognitive load, producing performance trade-offs.">
      <i class="bi bi-info-circle"></i>
    </span>
    + <em>Neural Gain (adaptive gain)</em>
    <span class="help-icon"
          data-bs-toggle="tooltip"
          title="LC–NE modulates neural gain; mid-level arousal optimizes performance (inverted-U), extremes hurt it.">
      <i class="bi bi-info-circle"></i>
    </span>
  </li>
</ul>

<p style="margin:.25rem 0 0">
  → <strong>Mechanism:</strong> <em>pupil-indexed LC–NE</em>
  <span class="help-icon"
        data-bs-toggle="tooltip"
        title="Pupil diameter tracks LC–NE activity (tonic &amp; phasic). In the dashboard, TEPR↑ + HRV↓ = High-Load confirmation; low TEPR + blink anomalies → Lapse confirmation. This supports thresholds that adapt with time-on-task and recover after microbreaks.">
    <i class="bi bi-info-circle"></i>
  </span>
  links arousal to performance.
</p>

<hr style="border:none;border-top:1px solid #e5e7eb;margin:1rem 0" />

<p><strong>Why this dashboard:</strong> combine deployable UX from SST with mechanistic LC–NE insight to deliver a
  <b>training-first, zero-headgear</b> cognitive monitor for robotic trainees.</p>
```

------------------------------------------------------------------------

## Executive Summary

Surgery is a cognitive sport. When arousal is balanced, performance peaks; when it's too low or too high, errors creep in. The OR is tightly constrained—so we avoid new body-worn hardware and lengthy calibration, and instead fuse existing robot telemetry with unobtrusive biosignals to deliver real-time coaching.

I built two tightly coupled tools:

-   **Training Lab**: makes load/fatigue *felt* and lets instructors choose a threshold policy to match their pedagogy.
-   **Production Dashboard**: runs those policies in real time using **pupil + grip/tremor + HRV**, tuned to prevent alarm fatigue and respect sterile-field constraints.

Accuracy is necessary, not sufficient. We optimize for operational outcomes—fewer high-load minutes, faster recovery, quicker proficiency—alongside standard model metrics.

::: callout-note
**Deployment KPIs:** Alert burden ≤ **0.6/min**, High-Load **min/hr ↓**, Time-to-Recovery **sec ↓**, Acknowledgement rate **↑**.
:::

```{=html}
<style>
.repo-grid{display:grid;grid-template-columns:repeat(auto-fit,minmax(260px,1fr));gap:12px;margin:.6rem 0}
.repo-card{background:#fff;border:1px solid #e5e7eb;border-radius:12px;padding:14px 14px 12px;
  box-shadow:0 1px 1px rgba(16,24,40,.02);transition:transform .16s ease,box-shadow .16s ease}
.repo-card:hover{transform:translateY(-1px);box-shadow:0 4px 14px rgba(16,24,40,.06);border-color:#cfe8f3}
.repo-card:focus-within{outline:2px solid #b7e1f0;outline-offset:2px}
.repo-head{display:flex;align-items:center;gap:8px}
.repo-head .stack{display:flex;align-items:center;gap:8px}
.repo-head i{font-size:1.05rem;color:#1f9bb6}
.repo-title{font-weight:600}
.repo-desc{color:#4b5563;margin:.35rem 0 .5rem;font-size:.95rem}
.repo-bar{display:flex;align-items:center;justify-content:space-between;gap:8px;flex-wrap:wrap}
.repo-badges{display:flex;gap:6px;flex-wrap:wrap}
.repo-badges img{height:18px;border-radius:6px;border:1px solid #edf0f3}
.repo-actions{display:flex;gap:8px}
.repo-actions a.btn{display:inline-flex;align-items:center;gap:.45rem;font-size:.85rem;padding:.30rem .62rem;border-radius:8px;
  border:1px solid #d7dee6;background:#f8fafc;color:#0b1526;text-decoration:none}
.repo-actions a.btn.primary{background:#e6f6fb;border-color:#b7e1f0}
.repo-actions a.btn i{font-size:1rem}
</style>

<div class="repo-grid">

  <div class="repo-card" role="group" aria-label="Surgical Cognitive Dashboard repository">
    <div class="repo-head">
      <div class="stack">
        <i class="bi bi-activity" aria-hidden="true"></i>
        <div class="repo-title">Surgical Cognitive Dashboard</div>
      </div>
      <i class="bi bi-github" aria-hidden="true" title="GitHub repository"></i>
    </div>
    <div class="repo-desc">Zero-headgear, real-time neuro-ergonomics for robotic surgery.</div>
    <div class="repo-bar">
      <div class="repo-badges">
        <img alt="GitHub stars" loading="lazy"
             src="https://img.shields.io/github/stars/mohdasti/surgical-cognitive-dashboard?style=flat-square&label=Stars">
        <img alt="Last commit" loading="lazy"
             src="https://img.shields.io/github/last-commit/mohdasti/surgical-cognitive-dashboard?style=flat-square">
      </div>
      <div class="repo-actions">
        <a class="btn primary" href="https://github.com/mohdasti/surgical-cognitive-dashboard"
           target="_blank" rel="noopener" aria-label="Open Surgical Cognitive Dashboard repository on GitHub">
          <i class="bi bi-github" aria-hidden="true"></i>Open repo
        </a>
      </div>
    </div>
  </div>

  <div class="repo-card" role="group" aria-label="Surgical Training Lab repository">
    <div class="repo-head">
      <div class="stack">
        <i class="bi bi-mortarboard" aria-hidden="true"></i>
        <div class="repo-title">Surgical Training Lab</div>
      </div>
      <i class="bi bi-github" aria-hidden="true" title="GitHub repository"></i>
    </div>
    <div class="repo-desc">Interactive policy sandbox: Inverted-U · SDT · Fatigue-adaptive.</div>
    <div class="repo-bar">
      <div class="repo-badges">
        <img alt="GitHub stars" loading="lazy"
             src="https://img.shields.io/github/stars/mohdasti/surgical-training-lab?style=flat-square&label=Stars">
        <img alt="Last commit" loading="lazy"
             src="https://img.shields.io/github/last-commit/mohdasti/surgical-training-lab?style=flat-square">
      </div>
      <div class="repo-actions">
        <a class="btn primary" href="https://github.com/mohdasti/surgical-training-lab"
           target="_blank" rel="noopener" aria-label="Open Surgical Training Lab repository on GitHub">
          <i class="bi bi-github" aria-hidden="true"></i>Open repo
        </a>
      </div>
    </div>
  </div>

</div>

```

------------------------------------------------------------------------

## Threshold Policies — how they work

*One problem, three lenses.* Each policy below answers: **what changes**, **when to use it**, and **how it maps to the production dashboard defaults**.

::: panel-tabset
### Adaptive Gain (Inverted-U) [<i class="bi bi-info-circle"></i>]{.help-icon data-bs-toggle="tooltip" title="Target the mid-arousal zone; too low/high hurts performance (LC–NE adaptive gain)."}

```{r}
#| echo: false
if (requireNamespace("ggplot2", quietly = TRUE)) {
  library(ggplot2)

  # --- Parameters you'd also expose in the Training Lab ---
  band_center <- 0.55   # where you want the trainee to operate (0..1)
  band_width  <- 0.20   # width of the "optimal" zone (0..1)
  sigma_perf  <- 0.22   # curve sharpness: smaller = sharper inverted-U

  # --- Inverted-U as a Gaussian over normalized arousal (0..1) ---
  arousal <- seq(0, 1, length.out = 400)
  performance <- exp(-((arousal - band_center)^2) / (2 * sigma_perf^2))

  lo <- max(0, band_center - band_width/2)
  hi <- min(1, band_center + band_width/2)

  df <- data.frame(arousal, performance)

  ggplot(df, aes(arousal, performance)) +
    # Optimal band shading
    annotate("rect", xmin = lo, xmax = hi, ymin = -Inf, ymax = Inf,
             alpha = 0.08, fill = "#1f9bb6") +
    geom_line(linewidth = 0.9) +
    geom_vline(xintercept = c(lo, hi), linetype = 2, linewidth = 0.4) +
    annotate("text", x = lo - 0.02, y = 0.1, label = "Low arousal\n(lapse risk)",
             hjust = 1, size = 3) +
    annotate("text", x = hi + 0.02, y = 0.1, label = "High arousal\n(overload risk)",
             hjust = 0, size = 3) +
    annotate("label", x = band_center, y = 0.9, label = "Optimal band",
             fill = "white", label.size = 0.2, size = 3.1) +
    scale_x_continuous(labels = scales::percent_format(accuracy = 1)) +
    labs(title = "Adaptive Gain (Inverted-U)",
         subtitle = sprintf("Center = %.0f%%  ·  Width = %.0f%%  ·  σ = %.2f",
                            100*band_center, 100*band_width, sigma_perf),
         x = "Normalized arousal (fused index: TEPR↑, HRV↓ → higher)",
         y = "Task performance (relative)") +
    theme_minimal()
}
```

```{=html}
<p style="margin-top:0.5rem;font-size:0.95rem;">
<strong>X-axis detail:</strong> Normalized arousal 
<span class="help-icon" data-bs-toggle="tooltip" 
      title="Fusion rule: A = sigmoid(w₁·z(TEPR) – w₂·z(RMSSD)), where z() standardizes to μ=0, σ=1. Example weights: w₁=0.6, w₂=0.4. TEPR↑ and HRV↓ both push arousal higher.">
  <i class="bi bi-info-circle"></i>
</span>
= fused TEPR + HRV index ∈ [0,1].
</p>
```

-   **Maps to Dashboard.** We fuse TEPR (↑) and HRV (↓) into a **normalized arousal index** ∈ \[0,1\]. Alerts fire when the index leaves the **optimal band** `[lo, hi]`.

    -   Wider band → **fewer alerts**, gentler coaching.
    -   Narrower band → **tighter coaching**, higher nuisance risk.
    -   We add **hysteresis** (small margins) to prevent alert "chatter" at band edges.

-   **Notes for accuracy.**

    -   The inverted-U is **task- and person-dependent**: expertise, stakes, and fatigue shift the **peak** (band_center) and **width** (band_width). That's why you **calibrate per trainee**.
    -   "Adaptive gain" is the **mechanism** (LC-NE modulating neural gain) that can yield this non-monotonic **performance curve**.

-   **References.** Yerkes–Dodson (1908); Aston-Jones & Cohen (2005, adaptive gain).

------------------------------------------------------------------------

### Dual-Criterion (SDT) [<i class="bi bi-info-circle"></i>]{.help-icon data-bs-toggle="tooltip" title="One knob moves both decision boundaries (High-Load & Lapse) together; tunes decision bias (criteria), not d′."}

```{r}
#| echo: false
if (requireNamespace("ggplot2", quietly = TRUE)) {
  library(ggplot2)

  # --- Controls (decision-bias knobs; NOT d′) -------------------------------
  criterion_tightness <- 0.60  # 0..1: 0 = wide Normal window; 1 = tight (more alerts)
  coupling            <- 0.70  # 0..1: symmetry of Lapse vs HL movement (1 = symmetric)
  hys_margin          <- 0.15  # evidence units: enter/exit separation on each side

  base_hl    <-  1.60         # baseline HL criterion (right)
  base_lapse <- -1.60         # baseline Lapse criterion (left)
  move_range <-  1.00         # how far each side can move toward 0

  # Criteria centers (without hysteresis)
  crit_hl    <- base_hl   - criterion_tightness * move_range
  crit_lapse <- base_lapse + criterion_tightness * move_range * coupling

  # Hysteresis: enter at outer line, exit at inner line
  hi_enter <- crit_hl
  hi_exit  <- crit_hl - hys_margin
  lo_enter <- crit_lapse
  lo_exit  <- crit_lapse + hys_margin

  # --- Illustrative SDT picture (not empirical data) ------------------------
  set.seed(1)
  n       <- 2000
  x_norm  <- rnorm(n,  0, 1.0)
  x_hl    <- rnorm(n, +2, 1.0)
  x_lapse <- rnorm(n, -2, 1.0)
  df <- rbind(
    data.frame(x = x_lapse, class = "Lapse"),
    data.frame(x = x_norm,  class = "Optimal/Normal"),
    data.frame(x = x_hl,    class = "High-Load")
  )

  ggplot(df, aes(x, fill = class, color = class)) +
    # Normal decision region (between ENTER lines)
    annotate("rect", xmin = lo_enter, xmax = hi_enter, ymin = -Inf, ymax = Inf,
             alpha = 0.06, fill = "#1f9bb6") +
    # Hysteresis zones (thin bands between enter and exit)
    annotate("rect", xmin = lo_enter, xmax = lo_exit, ymin = -Inf, ymax = Inf,
             alpha = 0.06, fill = "#9ca3af") +
    annotate("rect", xmin = hi_exit,  xmax = hi_enter, ymin = -Inf, ymax = Inf,
             alpha = 0.06, fill = "#9ca3af") +
    geom_density(alpha = 0.18, linewidth = 0.6) +
    # Enter / Exit lines
    geom_vline(xintercept = c(lo_enter, hi_enter), linetype = 2, linewidth = 0.55) +
    geom_vline(xintercept = c(lo_exit,  hi_exit),  linetype = 3, linewidth = 0.55) +
    annotate("label", x = (lo_enter + hi_enter)/2, y = 0.10, label = "Decision: Normal",
             fill = "white", label.size = 0.2, size = 3.5) +
    annotate("text", x = hi_enter + 0.08, y = 0.06, hjust = 0, label = "→ HL enter",  size = 3.3) +
    annotate("text", x = hi_exit  + 0.08, y = 0.05, hjust = 0, label = "→ HL exit",   size = 3.3) +
    annotate("text", x = lo_enter - 0.08, y = 0.06, hjust = 1, label = "Lapse enter ←", size = 3.3) +
    annotate("text", x = lo_exit  - 0.08, y = 0.05, hjust = 1, label = "Lapse exit ←",  size = 3.3) +
    scale_color_manual(values = c("Lapse"="#6b7280", "Optimal/Normal"="#0ea5b7", "High-Load"="#bc3c29")) +
    scale_fill_manual(values  = c("Lapse"="#6b7280", "Optimal/Normal"="#0ea5b7", "High-Load"="#bc3c29")) +
    coord_cartesian(xlim = c(-4, 4)) +
    labs(title    = "Dual-Criterion (SDT) with Hysteresis",
         subtitle = sprintf("tightness=%.2f · coupling=%.2f · hysteresis=%.2f  |  enter:[%.2f, %.2f]  exit:[%.2f, %.2f]",
                            criterion_tightness, coupling, hys_margin,
                            lo_enter, hi_enter, lo_exit, hi_exit),
         x = "Evidence (signed index: Lapse ←   0   → High-Load)",
         y = "Density") +
    guides(color = "none", fill = "none") +
    theme_minimal() +
    theme(legend.position = "none")
}
```

```{=html}
<p style="margin:.25rem 0 .35rem;font-size:0.95rem;">
<strong>X-axis:</strong> a z-scored, signed <em>evidence index</em> from biosignals (e.g., TEPR↑, RMSSD↓).
Higher → <em>High-Load</em>; lower → <em>Lapse</em>.
</p>
```

-   **What this shows.** A three-state SDT layout (Lapse / Normal / High-Load) with **two decision criteria** and **hysteresis** (separate enter/exit thresholds).
    -   **`criterion_tightness`** narrows or widens the Normal window by moving **both** criteria toward or away from 0.
    -   **`coupling`** controls symmetry: values **\< 1** move the Lapse boundary **less** than the High-Load boundary; values **\> 1** move it **more**.
-   **Why "Dual-Criterion," not "Sensitivity."** In SDT, **sensitivity** is **d′** (distribution separation). This policy **adjusts decision criteria (bias)**, not d′.

**How the two figures relate:** The first figure defines the boundaries (enter/exit on each side). The second applies the **same boundaries—nudged slightly if needed so at least one crossing is visible**—to a noisy signal, showing how hysteresis prevents flip-flops near a boundary.

```{r}
#| echo: false
#| fig-width: 10.5
#| fig-height: 4.2
if (requireNamespace("ggplot2", quietly = TRUE)) {
  library(ggplot2); library(grid)

  # --- signal ---------------------------------------------------------------
  set.seed(42)
  T  <- 400
  e  <- numeric(T)
  for (t in 2:T) e[t] <- 0.92*e[t-1] + rnorm(1, 0.02, 0.12)

  # --- start with EXACT thresholds from Plot 1 ------------------------------
  hi_enter2 <- hi_enter; hi_exit2 <- hi_exit
  lo_enter2 <- lo_enter; lo_exit2 <- lo_exit

  # Check if we see at least one crossing; if not, nudge minimally for demo
  need_nudge <- !(any(e > hi_enter2) || any(e < lo_enter2))
  if (need_nudge) {
    maxE <- max(e); minE <- min(e)
    if (!any(e > hi_enter2) && maxE > (hi_enter2 - 0.02)) {
      hi_enter2 <- max(hi_enter2 - 0.02, maxE - 0.03)
      hi_exit2  <- hi_enter2 - max(0.05, abs(hi_enter - hi_exit))
    }
    if (!any(e < lo_enter2) && minE < (lo_enter2 + 0.02)) {
      lo_enter2 <- min(lo_enter2 + 0.02, minE + 0.03)
      lo_exit2  <- lo_enter2 + max(0.05, abs(lo_exit - lo_enter))
    }
  }

  # --- classify: naive vs hysteresis ---------------------------------------
  state_naive <- ifelse(e > hi_enter2, "HL",
                        ifelse(e < lo_enter2, "Lapse", "Normal"))

  state_hys <- character(T); state <- "Normal"
  for (t in 1:T) {
    x <- e[t]
    if (state == "Normal") {
      if (x > hi_enter2) state <- "HL"
      else if (x < lo_enter2) state <- "Lapse"
    } else if (state == "HL") {
      if (x < hi_exit2) state <- "Normal"
    } else if (state == "Lapse") {
      if (x > lo_exit2) state <- "Normal"
    }
    state_hys[t] <- state
  }

  # long data (two rows: top = naive, bottom = hysteresis, slight visual offset)
  df_long <- rbind(
    data.frame(t = 1:T, evidence = e, state = state_naive,
               method = "Naive (top)",          y = e),
    data.frame(t = 1:T, evidence = e, state = state_hys,
               method = "Hysteresis (bottom)",  y = e - 0.06)
  )

  # thresholds legend: just Enter / Exit
  hlines <- data.frame(
    y = c(hi_enter2, hi_exit2, lo_enter2, lo_exit2),
    type = factor(c("Enter","Exit","Enter","Exit"), levels = c("Enter","Exit"))
  )

  ggplot(df_long, aes(t, y)) +
    geom_line(aes(y = evidence), linewidth = 0.45, color = "grey35", alpha = 0.7) +
    geom_hline(data = hlines, aes(yintercept = y, linetype = type),
               linewidth = 0.45, color = "black", alpha = 0.75) +
    geom_point(aes(color = state, shape = method), size = 0.9, alpha = 0.95) +
    scale_color_manual(values = c("HL"="#bc3c29","Lapse"="#6b7280","Normal"="#0ea5b7")) +
    scale_shape_manual(values = c("Naive (top)" = 16, "Hysteresis (bottom)" = 17)) +
    scale_linetype_manual(values = c("Enter"=2, "Exit"=3)) +
    labs(title = "Hysteresis reduces edge-chatter",
         subtitle = if (need_nudge) "Shapes = method; dashed = enter, dotted = exit • Note: thresholds nudged slightly for visibility"
                    else "Shapes = method; dashed = enter, dotted = exit thresholds",
         x = "Time", y = "Evidence",
         color = "State", shape = "Method", linetype = "Threshold") +
    theme_minimal() +
    theme(
      legend.position   = "bottom",
      legend.box        = "horizontal",
      legend.key.size   = grid::unit(6, "pt"),
      legend.spacing.x  = grid::unit(4, "pt"),
      legend.spacing.y  = grid::unit(2, "pt"),
      legend.box.spacing= grid::unit(2, "pt"),
      legend.title      = element_text(size = 9),
      legend.text       = element_text(size = 8),
      plot.subtitle     = element_text(size = 10)
    ) +
    guides(
      color    = guide_legend(nrow = 1, byrow = TRUE, order = 1),
      shape    = guide_legend(nrow = 1, byrow = TRUE, order = 2),
      linetype = guide_legend(nrow = 1, byrow = TRUE, order = 3)
    )
}
```

-   **Hysteresis.** Enter/exit thresholds (and/or consecutive-sample confirmation) require **persistent evidence** to change state—reducing nuisance alerts.
-   **Maps to Dashboard.** The control sets the **HL** and **Lapse** thresholds together. Alerts still require **evidence + physiology** (e.g., HL requires **TEPR↑ or HRV↓**; Lapse prefers **low TEPR + blink anomalies**).
-   **References.** Macmillan & Creelman (Signal Detection Theory); NASA-TLX background (Hart & Staveland).

------------------------------------------------------------------------

### Time-on-Task Policy (Fatigue-Adaptive) [<i class="bi bi-info-circle"></i>]{.help-icon data-bs-toggle="tooltip" title="Steady until onset; then the decision threshold relaxes with a half-life. A microbreak briefly tightens the threshold and decays back."}

```{r}
#| echo: false
# ⚙️ This is a controller on the *decision threshold*, not a claim about an internal neural mechanism.
#    It’s meant to be auditable and tunable per surgeon/task.

if (requireNamespace("ggplot2", quietly = TRUE)) {
  library(ggplot2); library(grid)

  # ----------------------- Controls (match UI / Lab names) -----------------------
  c_start                <- 0.70  # starting decision threshold (fresh)
  c_floor                <- 0.50  # most relaxed threshold allowed
  onset_min              <- 30    # fatigue onset time (min)
  fatigue_half_life_min  <- 21    # half-life (min): time to move halfway from start→floor AFTER onset

  # Microbreak: either a fixed size (demo) or physiology-proportional (preferred)
  microbreak_min         <- 60    # minute of the microbreak (set NA for none)
  microbreak_reset_fixed <- 0.08  # small fixed reset (if no physiology available)
  microbreak_decay_min   <- 2     # reset decays back with this time constant (min)

  # ----------------------- Optional physiology-proportional reset ----------------
  # If you have short windows around the microbreak (e.g., 60 s pre, 120 s post),
  # define these vectors before this chunk runs: RMSSD_pre, RMSSD_post, TEPR_pre, TEPR_post, Tremor_pre, Tremor_post
  # Otherwise the code falls back to 'microbreak_reset_fixed'.
  clamp01 <- function(x) pmax(0, pmin(1, x))
  zscale  <- function(x) if (length(x) > 1 && sd(x) > 0) (x - mean(x)) / sd(x) else 0

  derive_reset_from_phys <- function() {
    if (exists("RMSSD_pre") && exists("RMSSD_post") &&
        exists("TEPR_pre")  && exists("TEPR_post")  &&
        exists("Tremor_pre")&& exists("Tremor_post")) {

      d_hrv   <- mean(RMSSD_post) - mean(RMSSD_pre)       # ↑ is good recovery
      d_tepr  <- mean(TEPR_post)  - mean(TEPR_pre)        # ↓ is good recovery
      d_trem  <- mean(Tremor_post)- mean(Tremor_pre)      # ↓ is good recovery

      # map deltas to [0,1] recovery indices (rough-and-ready normalization)
      phi_h    <- clamp01(zscale(d_hrv))
      phi_p    <- clamp01(zscale(-d_tepr))
      phi_tr   <- clamp01(zscale(-d_trem))
      phi      <- 0.5*phi_h + 0.3*phi_p + 0.2*phi_tr      # weights can be tuned/validated
      alpha    <- 0.35                                     # maps recovery to fraction of remaining gap
      return(list(ok = TRUE, phi = phi, alpha = alpha))
    }
    list(ok = FALSE, phi = 0, alpha = 0)
  }

  phys <- derive_reset_from_phys()

  # ----------------------- Threshold policy function -----------------------------
  fatigue_threshold <- function(t) {
    # baseline: hold at c_start until onset, then relax exponentially to c_floor
    tau  <- fatigue_half_life_min / log(2)   # map half-life to time constant
    base <- ifelse(t < onset_min,
                   c_start,
                   c_floor + (c_start - c_floor) * exp(-(t - onset_min) / tau))

    # microbreak reset: ONLY after the break; either physiology-proportional or fixed
    if (!is.na(microbreak_min)) {
      gap   <- c_start - base                 # how far below "fresh"
      reset <- if (phys$ok) phys$alpha * phys$phi * gap else microbreak_reset_fixed
      boost <- ifelse(t >= microbreak_min, reset * exp(-(t - microbreak_min) / microbreak_decay_min), 0)
    } else {
      boost <- 0
    }

    # clamp to [c_floor, c_start]
    pmin(c_start, pmax(c_floor, base + boost))
  }

  # ----------------------- Build data and reference markers ---------------------
  t      <- seq(0, 90, by = 0.25)
  thr    <- fatigue_threshold(t)
  t_half <- onset_min + fatigue_half_life_min
  y_half <- (c_start + c_floor) / 2
  df     <- data.frame(mins = t, threshold = thr)

  # ----------------------- Plot --------------------------------------------------
  ggplot(df, aes(mins, threshold)) +
    # shaded pre-onset region
    annotate("rect", xmin = -Inf, xmax = onset_min, ymin = -Inf, ymax = Inf,
             alpha = 0.05, fill = "grey60") +
    # reference lines
    geom_hline(yintercept = c_start, linetype = "solid",  linewidth = 0.3) +
    geom_hline(yintercept = c_floor, linetype = "dotted", linewidth = 0.3) +
    geom_vline(xintercept = onset_min, linetype = 2, linewidth = 0.3) +
    { if (!is.na(microbreak_min)) geom_vline(xintercept = microbreak_min, linetype = 2, linewidth = 0.3) } +
    # main curve
    geom_line(linewidth = 0.85) +
    # half-life marker
    geom_point(aes(x = t_half, y = y_half), size = 2, color = "red") +
    geom_segment(aes(x = t_half, xend = t_half, y = c_start, yend = y_half),
                 arrow = arrow(length = grid::unit(0.15, "cm")), linewidth = 0.3) +
    # labels
    annotate("text", x = onset_min - 2, y = c_start + 0.006, hjust = 1,
             label = "Onset", size = 4) +
    { if (!is.na(microbreak_min))
        annotate("text", x = microbreak_min + 2, y = c_start - 0.01, hjust = 0,
                 label = "Microbreak", size = 4) } +
    annotate("text", x = t_half - 21, y = y_half - 0.025, hjust = 0,
             label = "Half-life → halfway to floor", size = 4) +
    annotate("text", x = max(t) - 5, y = c_floor + 0.005, hjust = 1,
             label = "Floor", size = 4) +
    annotate("text", x = 5, y = c_start + 0.005, hjust = 0,
             label = "Start", size = 4) +
    labs(
      title = "Time-on-Task (Fatigue-Adaptive): steady → relax → brief reset",
      subtitle = sprintf("Onset = %d min · Half-life = %d min · Microbreak = %s · Reset = %s",
                         onset_min, fatigue_half_life_min,
                         ifelse(is.na(microbreak_min), "none", paste0(microbreak_min, " min")),
                         ifelse(phys$ok, "proportional to bio recovery", sprintf("fixed (%.2f)", microbreak_reset_fixed))),
      x = "Time on task (min)",
      y = "High-Load decision threshold"
    ) +
    theme_minimal() +
    theme(legend.position = "none")
}
```

```{r}
#| echo: false
#| results: asis

# Auto-explainer for the plotted policy (keeps text in sync with the parameters above)



fmt <- function(x, d=2) formatC(x, format="f", digits=d)
cat(
"::: {.callout-note}\n",
"How to read this policy\n\n",
"- Pre-onset (t < ", onset_min, " min): the decision threshold stays at ", fmt(c_start), ".\n",
"- Post-onset: the threshold relaxes exponentially toward the floor ", fmt(c_floor), "—i.e., the system becomes more tolerant of High-Load detections as vigilance degrades.\n",
if (!is.na(microbreak_min))
paste0("- Microbreak (t = ", microbreak_min, " min): a small reset tightens the threshold, then decays over ~", microbreak_decay_min, " min. ",
if (exists('phys') && phys$ok) "(Size is proportional to observed HRV/TEPR/tremor recovery.)\n" else "(Demo uses a fixed, modest reset.)\n")
else "",
"- Half-life: at t = onset + half-life = ", onset_min, " + ", fatigue_half_life_min, " = ", onset_min + fatigue_half_life_min, " min, the threshold sits halfway between ", fmt(c_start), " and ", fmt(c_floor), ".\n",
"- Design intent: this is a controller on the criterion—transparent, auditable, and tunable per surgeon/task; it does not assume the evidence itself drifts.\n",
":::",
sep = ""
)
```

-   **Why a policy like this?** Vigilance typically declines with time-on-task while perceived workload rises; brief microbreaks improve comfort and focus without harming flow. Pupil/HRV often show fast, partial recovery over 1–3 minutes. A time-scheduled, small criterion reset captures these operational realities without heavy modeling.

-   **Good defaults (to be tuned)**: `onset_min` 20–30 min; `fatigue_half_life_min` 15–30 min; reset proportional to observed pre/post microbreak recovery, with decay 1–3 min.

-   **References.**

    -   Warm, Parasuraman & Matthews (2008). *Vigilance requires hard mental work and is stressful.* **Human Factors, 50(3), 433–441.** DOI: 10.1518/001872008X312152

    -   Dorion & Darveau (2013). *Do micropauses prevent surgeon’s fatigue and loss of accuracy?* **Ann Surg, 257(2), 256–259.** DOI: 10.1097/SLA.0b013e31825efe87

    -   Park et al. (2017). *Intraoperative “micro breaks” with exercises reduce surgeons’ musculoskeletal injuries.* **J Surg Res, 211, 24–31.** DOI: 10.1016/j.jss.2016.11.017

    -   Hallbeck et al. (2017). *The impact of intraoperative microbreaks…* **Applied Ergonomics, 60, 334–341.** DOI: 10.1016/j.apergo.2016.12.006

    -   Luger et al. (2023). *One-minute rest breaks mitigate healthcare worker stress.* **JMIR, 25, e44804.** DOI: 10.2196/44804

    -   Unsworth & Robison (2018). *Tracking arousal with pupillometry.* **Cogn Affect Behav Neurosci, 18, 638–664.** DOI: 10.3758/s13415-018-0604-8
:::

------------------------------------------------------------------------

## Why thresholds must adapt

```{=html}
<style>
.demo-card{background:linear-gradient(135deg, #e6f6fb 0%, #f0fafe 100%);
  border:1px solid #b7e1f0;border-radius:12px;padding:20px;
  box-shadow:0 2px 8px rgba(16,24,40,.04);margin:1rem 0;max-width:720px}
.demo-card:hover{box-shadow:0 4px 16px rgba(16,24,40,.08);border-color:#9dd9ec}
.demo-head{display:flex;align-items:center;gap:10px;margin-bottom:10px}
.demo-head img{height:40px;width:auto;border-radius:4px}
.demo-title{font-weight:600;font-size:1.1rem;color:#0b1526}
.demo-desc{color:#4b5563;margin-bottom:14px;font-size:.95rem;line-height:1.4}
.demo-features{display:flex;flex-wrap:wrap;gap:8px;margin-bottom:14px}
.demo-features .tag{display:inline-flex;align-items:center;gap:.3rem;
  padding:.25rem .5rem;background:#fff;border:1px solid #d0e9f3;border-radius:6px;
  font-size:.85rem;color:#0b1526}
.demo-features .tag i{font-size:.95rem;color:#1f9bb6}
.demo-action{text-align:center}
.demo-action a{display:inline-flex;align-items:center;gap:.6rem;
  padding:11px 26px;background:#1f9bb6;color:#fff;text-decoration:none;
  border-radius:8px;font-weight:600;font-size:.95rem;
  box-shadow:0 2px 6px rgba(31,155,182,.25);transition:all .2s ease}
.demo-action a:hover{background:#1a8ca0;box-shadow:0 4px 12px rgba(31,155,182,.35);transform:translateY(-1px)}
.demo-action a i{font-size:1.1rem}
.demo-note{margin-top:10px;font-size:.85rem;color:#6b7280;font-style:italic}
</style>

<div class="demo-card">
  <div class="demo-head">
    <img src="https://upload.wikimedia.org/wikipedia/commons/b/bf/Shiny_hex_logo.svg" alt="Shiny logo" loading="lazy">
    <div class="demo-title">Interactive Training Lab</div>
  </div>
  <div class="demo-desc">
    Compare all three threshold policies on the same biosignal stream. Switch policies mid-run, adjust parameters, and export configurations for production use.
  </div>
  <div class="demo-features">
    <span class="tag"><i class="bi bi-activity"></i>Adaptive Gain</span>
    <span class="tag"><i class="bi bi-bullseye"></i>Dual-Criterion</span>
    <span class="tag"><i class="bi bi-clock-history"></i>Time-on-Task</span>
  </div>
  <div class="demo-action">
    <a href="https://0z6q8c-mohammad0dastgheib.shinyapps.io/surgical-training-lab/" 
       target="_blank" rel="noopener noreferrer">
      <i class="bi bi-box-arrow-up-right"></i>Launch Training Lab
    </a>
  </div>
  <div class="demo-note">Opens in new tab · May take a few seconds to load</div>
</div>

```

> Switch between policies on the same stream. Notice how the same physiologic trace produces different coaching behavior. **Policy is a choice**, and it should be teachable.

------------------------------------------------------------------------

## Production Dashboard 


```{=html}
<style>
.gallery{display:grid;grid-template-columns:repeat(auto-fit,minmax(220px,1fr));gap:10px}
.gallery a{display:block;border:1px solid #e5e7eb;border-radius:10px;overflow:hidden}
.gallery img{display:block;width:100%;height:auto}
.small-note{color:#6b7280;font-size:.9rem}
</style>

<h3>Live Monitor Overview</h3>
<div class="gallery">
  <a href="/assets/demo/whole-live-monitor.png" class="lightbox" data-gallery="dashboard" data-glightbox="title:Full live monitor dashboard view">
    <img src="/assets/demo/whole-live-monitor.png" alt="Live monitor overview">
  </a>
</div>

<h3>Component Details — Zoomable Gallery</h3>
<div class="gallery">
  <a href="/assets/demo/cognitve-load-index.png" class="lightbox" data-gallery="components" data-glightbox="title:Cognitive load index with hysteresis thresholds">
    <img src="/assets/demo/cognitve-load-index.png" alt="Cognitive load">
  </a>
  <a href="/assets/demo/motor-steadiness-index.png" class="lightbox" data-gallery="components" data-glightbox="title:Motor steadiness index (tremor + grip)">
    <img src="/assets/demo/motor-steadiness-index.png" alt="Motor steadiness">
  </a>
  <a href="/assets/demo/alert-log.png" class="lightbox" data-gallery="components" data-glightbox="title:Alert timeline: enter vs exit markers">
    <img src="/assets/demo/alert-log.png" alt="Alerts timeline">
  </a>
</div>
<p class="small-note">Click any image to zoom and navigate with arrow keys.</p>

<h3>ML Diagnostics Overview</h3>
<div class="gallery">
  <a href="/assets/demo/whole-ml-model-diagnostics.png" class="lightbox" data-gallery="ml-overview" data-glightbox="title:Full ML diagnostics dashboard view">
    <img src="/assets/demo/whole-ml-model-diagnostics.png" alt="ML diagnostics overview">
  </a>
</div>

<h3>ML Diagnostics Details — Zoomable Gallery</h3>
<div class="gallery">
  <a href="/assets/demo/ml-probability-calibration.png" class="lightbox" data-gallery="ml-details" data-glightbox="title:Calibration curve: predicted vs observed (ECE, Brier)">
    <img src="/assets/demo/ml-probability-calibration.png" alt="Calibration">
  </a>
  <a href="/assets/demo/ml-threshold-sandbox.png" class="lightbox" data-gallery="ml-details" data-glightbox="title:Threshold sandbox: compare policies on same data">
    <img src="/assets/demo/ml-threshold-sandbox.png" alt="Threshold sandbox">
  </a>
  <a href="/assets/demo/ml-feature-importance.png" class="lightbox" data-gallery="ml-details" data-glightbox="title:Feature importance (XGBoost SHAP values)">
    <img src="/assets/demo/ml-feature-importance.png" alt="Feature importance">
  </a>
  <a href="/assets/demo/ml-cross-validation-results.png" class="lightbox" data-gallery="ml-details" data-glightbox="title:Cross-validation results (LOSO)">
    <img src="/assets/demo/ml-cross-validation-results.png" alt="Cross-validation">
  </a>
  <a href="/assets/demo/ml-model-overview.png" class="lightbox" data-gallery="ml-details" data-glightbox="title:Model overview and architecture">
    <img src="/assets/demo/ml-model-overview.png" alt="Model overview">
  </a>
  <a href="/assets/demo/ml-partial-dependence.png" class="lightbox" data-gallery="ml-details" data-glightbox="title:Partial dependence plots for key features">
    <img src="/assets/demo/ml-partial-dependence.png" alt="Partial dependence">
  </a>
</div>

```

------------------------------------------------------------------------

## Methods (what runs under the hood)

**Data & provenance.**  
We use (a) synthetic sessions produced by the same code paths as the live app (seeded; 10–30 min, 50–100 Hz raw) and (b) replayable demo logs exported from the dashboard. All analyses in this page use time-stamped streams (UTC, ms).

**Signals & sampling.**  
Pupil diameter (mm; eye tracker), HRV from PPG/ECG (ms), grip force (N), tool-tip tremor (μm, 8–12 Hz band), blinks (blinks/min), ambient noise (dB). Signals are synchronized to a common clock and resampled to 10 Hz for feature windows.

**Preprocessing.**  
- Pupil: blink interpolation → robust z-scoring within session; TEPR = event-locked delta (2–5 s).  
- HRV: RMSSD computed over rolling 60 s (also 30/120 s for sensitivity); artifact correction via outlier trimming (5×MAD).  
- Grip/tremor: 2–10 s rolling mean/SD; tremor via band-pass and RMS.  
- Blink rate: rolling 60 s count; winsorized (1st/99th pct).

**Features (examples; all z-scored within session).**  
- **Pupil:** tonic_30s_mean; tepr_5s_delta; pupil_cv_30s.  
- **HRV:** rmssd_60s; rmssd_slope_60s; rmssd_ma_180s; **rmssd×tepr** interaction.  
- **Grip/Tremor:** grip_mean_15s; grip_cv_15s; tremor_rms_10s; tremor_trend_60s.  
- **Ocular:** blink_rate_60s; fixation_var_30s.  
- **Context:** noise_db_30s.  

**Modeling.**  
XGBoost (multi:softprob, 3 classes: Normal / High-Load / Lapse). Class imbalance handled via class weights (rare Lapse upweighted) and PR-AUC monitoring. Lapse probability is **calibrated** with Platt scaling (logistic on validation folds). We report ECE and Brier.

**Threshold policies (runtime).**  
- **Adaptive Gain (Inverted-U):** keeps evidence within an optimal band.  
- **Dual-Criterion (SDT) with hysteresis:** two criteria + enter/exit guards.  
- **Time-on-Task (Fatigue):** hold → relax with half-life; microbreak gives a decaying reset.

**Validation.**  
Leave-One-Surgeon-Out (LOSO) where available; otherwise session-level 5× CV with subject leakage prevented. Hyperparameters chosen by Bayesian search, then frozen.

**Reproducibility.**  
Seeds fixed; all plots are generated by scripts under `scripts/90_make_gallery.R` so the case study visuals match the live app implementation.


------------------------------------------------------------------------

## Results that matter (ops KPIs)

**KPI definitions (computed per session):**

1) **High-Load minutes/hour**  
   Sum of time with predicted state = High-Load ÷ total time × 60. Lower is better.

2) **Lapse minutes/hour**  
   Sum of time with predicted state = Lapse ÷ total time × 60. Lower is better.

3) **Time-in-Optimal zone (%)**  
   100 × (Normal time ÷ total time). Higher is better.

4) **Alert precision / nuisance rate**  
   Precision = TP/(TP+FP) using physiology-guarded labels (e.g., HL requires TEPR↑ or HRV↓ within ±2 s).  
   Nuisance = FP per hour. Lower is better.

5) **Edge-chatter rate**  
   Number of state flips that revert within 3 s ÷ hour. Lower is better. (Hysteresis target: ↓ ≥40%.)

6) **Time-to-recovery after microbreak (s)**  
   Median time from microbreak end to HRV (RMSSD) returning to 80% of pre-break baseline (and/or tremor −10%). Lower is better.

7) **Calibration (ECE, Brier)**  
   Expected calibration error (10 bins) and Brier score for class probabilities. Lower is better.

8) **Stability index**  
   1 − (unique state transitions ÷ possible transitions). Higher is better (smoother state).

> We display per-session values and deltas when switching policies (e.g., SDT→ToT), so instructors can see which policy reduces High-Load minutes without spiking nuisance alerts.

------------------------------------------------------------------------

## Live clinical-style table with literature ranges


::: {.column-page}
```{=html}
<iframe src="supporting_files/features_gt_table.html"
        width="100%" height="600px" style="border:none;"
        data-external="1">
</iframe>
```
:::

------------------------------------------------------------------------

## Product vs. Lab — how they fit

```{r}
suppressPackageStartupMessages({
  library(dplyr); library(gt); library(scales)
})
comparison_data <- tibble::tibble(
  Aspect = c("Purpose","Audience","Features","Latency","Interactivity","Calibration","Status"),
  `Production Dashboard` = c(
    "Real-time monitoring & decision support",
    "Clinicians, safety officers",
    "Live gt table, tuned alerts, evidence fusion (pupil + HRV + grip/tremor)",
    "< 1 s UI; heavier data load",
    "Threshold policies runnable; microbreak logging",
    "XGBoost + Platt scaling; reliability curve (ECE/Brier)",
    "Stable, zero-headgear UI"
  ),
  `Training Lab` = c(
    "Theory exploration & threshold policy tuning",
    "Educators, researchers",
    "Three paradigms (Adaptive Gain, SDT+hysteresis, Time-on-Task)",
    "Instant",
    "Side-by-side policy comparisons; sliders",
    "Not model-based; exports policy defaults",
    "Experimental, fast iteration"
  )
)
comparison_data |>
  gt() |>
  tab_header(
    title = md("**Product vs. Lab — how they fit**"),
    subtitle = md("Operational app (left) vs. pedagogy sandbox (right)")
  ) |>
  cols_label(
    Aspect = md("**Aspect**"),
    `Production Dashboard` = md("**Production Dashboard**"),
    `Training Lab` = md("**Training Lab**")
  ) |>
  tab_options(
    table.width = pct(100),
    table.font.size = px(14),
    data_row.padding = px(6)
  ) |>
  opt_row_striping() |>
  cols_width(
    Aspect ~ px(160),
    everything() ~ pct(40)
  ) |>
  tab_style(style = list(cell_fill(color = "#f8f9fa"), cell_text(weight = "bold")),
            locations = cells_body(columns = Aspect)) |>
  tab_style(style = list(cell_fill(color = "#e8f5e9")),
            locations = cells_body(columns = `Production Dashboard`)) |>
  tab_style(style = list(cell_fill(color = "#fff8e1")),
            locations = cells_body(columns = `Training Lab`)) |>
  tab_source_note(md("**Note.** The Lab defines pedagogy & defaults; the Dashboard executes with calibrated probabilities and alert hygiene."))
```

------------------------------------------------------------------------

## From SST to the OR — what transferred

- **Alert hygiene over cleverness.** A good model with bad alerting is a bad product. We optimize nuisance rate and edge-chatter, not just AUC.  
- **Interpretability on contact.** "High-Load confirmed (TEPR↑ + RMSSD↓)" is actionable; a confusion matrix mid-case is not.  
- **Friction kills adoption.** Every cable/cap/password taxes attention. That's why this stays **zero-headgear** with **<60-second setup**.

------------------------------------------------------------------------

## Deployment & Privacy

Runs as a Docker image or on ShinyApps; can embed in training portals with a single `<iframe>`. By default, **surgeon biometrics are ephemeral**: we retain only de-identified aggregates (for QA/research) with explicit consent. The system is **assistive**, not autonomous—the clinician remains in the loop, with visible rationale for alerts.

------------------------------------------------------------------------

## What's next

- **Training pilots** in a robotic lab to quantify **High-Load min/hr** and **time-to-recovery** improvements for residents.  
- **State-adaptive assistance:** small camera framing / motion-scaling tweaks under high load; defer non-urgent prompts until recovery.  
- **Intervention efficacy logging:** for each alert/microbreak, track whether **HRV (RMSSD)** or **tremor** normalizes within ~120 s to **auto-tune thresholds per surgeon**.
